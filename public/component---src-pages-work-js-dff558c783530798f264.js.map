{"version":3,"sources":["webpack:///./src/pages/Work.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/react-intersection-observer/react-intersection-observer.esm.js"],"names":["initGA","console","log","ReactGA","initialize","logPageView","set","page","window","location","pathname","pageview","Work","props","state","isVisible","handleEnd","bind","componentDidMount","document","querySelectorAll","style","animation","handleEnd2","getElementById","render","id","class","onChange","inView","setState","this","onAnimationEnd","src","href","paddingLeft","Component","condition","message","Error","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_assertThisInitialized","self","ReferenceError","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","threshold","_options","root","rootMargin","has","observerId","get","toString","getRootId","observerInstance","IntersectionObserver","instance","observer","thresholds","Array","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","isIntersecting","intersectionRatio","some","undefined","_React$Component","subClass","superClass","InView","_this","_len","args","_key","concat","entry","node","observeNode","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","prevState","triggerOnce","componentWillUnmount","_this$props","handleChange","_this$state","children","isPlainChildren","ref","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose"],"mappings":"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","file":"component---src-pages-work-js-dff558c783530798f264.js","sourcesContent":["import React, { Component } from \"react\"\nimport ReactGA from \"react-ga\"\nimport Observer from \"react-intersection-observer\"\n\nexport const initGA = () => {\n  console.log(\"GA Init\")\n  ReactGA.initialize()\n}\nexport const logPageView = () => {\n  ReactGA.set({ page: window.location.pathname })\n  ReactGA.pageview(window.location.pathname)\n}\n\nclass Work extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { isVisible: false }\n    this.handleEnd = this.handleEnd.bind(this)\n  }\n\n  componentDidMount() {\n    initGA()\n    logPageView()\n  }\n\n  handleEnd() {\n    const col = document.querySelectorAll(\"#work2\")[0]\n    col.style.animation = \"appear 1s ease-in forwards\"\n  }\n\n  handleEnd2() {\n    const p = document.querySelectorAll(\"#workcol p\")[0]\n    p.style.animation = \"appearFromLeft 1s ease-in forwards\"\n    const arrow = document.getElementById(\"blackarrow\")\n    arrow.style.animation = \"move 1s ease-in infinite\"\n    const git = document.getElementById(\"git\")\n    git.style.animation = \"appearFromLeft 1s ease-in forwards\"\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"choi\" class=\"row\">\n          <div id=\"workcol\" class=\"col-sm-3\">\n            <Observer onChange={inView => this.setState({ isVisible: inView })}>\n              {this.state.isVisible ? (\n                <div>\n                  <h2\n                    style={{ animation: \"appear 1s ease-in forwards\" }}\n                    id=\"work1\"\n                  >\n                    <span>ViE</span>\n                  </h2>\n                  <h2\n                    style={{ animation: \"appear 1s ease-in forwards\" }}\n                    id=\"work1\"\n                    onAnimationEnd={this.handleEnd}\n                  >\n                    <span>MY</span>\n                  </h2>\n                </div>\n              ) : null}\n            </Observer>\n            {this.state.isVisible ? (\n              <div>\n                <p>\n                  in web development using CSS, HTML, Javascript, React, and iOS\n                  app development using SwiftUI and Objective-C and XCode). If\n                  you want to see more of my back-end work, please visit my\n                  Github.{\" \"}\n                </p>\n                <img id=\"blackarrow\" src=\"blackarrow.png\"></img>\n                <a href=\"https://github.com/soyoychoi\">\n                  <img id=\"git\" src=\"github.png\"></img>\n                </a>\n              </div>\n            ) : null}\n          </div>\n          {this.state.isVisible ? (\n            <div onAnimationEnd={this.handleEnd2} id=\"work2\" class=\"col-sm-9\">\n              <h1>\n                <span>W</span>\n              </h1>\n              <h1>\n                <span style={{ paddingLeft: \"1%\" }}> O</span>\n              </h1>\n              <h1>\n                <span style={{ paddingLeft: \"1%\" }}> R</span>\n              </h1>\n              <h1>\n                <span style={{ paddingLeft: \"1%\" }}> K</span>\n              </h1>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Work\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { createElement, Component, useRef, useState, useCallback, useDebugValue } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  } // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n\n\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) unobserve(_this.node);\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState({\n    inView: false,\n    entry: undefined\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useDebugValue(state.inView);\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };"],"sourceRoot":""}